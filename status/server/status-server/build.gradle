plugins {
    id 'war'
    id 'application'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
}

group 'org.comroid'
version = parent.version
apply from: 'vars.gradle'

sourceCompatibility = 17
targetCompatibility = 17

mainClassName = 'org.comroid.status.server.StatusServer'

sourceSets {
    main.java.srcDirs = [file("$parent.projectDir/src/server/java")]
    main.resources.srcDirs = [file("$parent.projectDir/src/server/resources")]
}

if (isAutoDeploy) {
    evaluationDependsOn ':status-api'
} else {
    evaluationDependsOn ':status:status-api'
}

war {
    webAppDirectory = file("$parent.projectDir/src/server/webapp")
}

task simplifyDist(type: Copy, dependsOn: 'bootWar') {
    from bootWar.outputs.files.singleFile
    def target = file("$buildDir/dist")
    into target
    rename { String filename -> return "status.jar" }
    System.out.printf("Simplifying file name to: %s/auth.jar\n", target.getAbsolutePath())
}

dependencies {
    compileOnly 'org.jetbrains:annotations:23.0.0'

    if (findProject(':status:status-api') != null)
        implementation project(':status:status-api')
    else if (findProject(':status-api') != null)
        implementation project(':status-api')
    else implementation 'org.comroid:status-api:1.+'

    // db
    runtimeOnly 'com.mysql:mysql-connector-j'

    // data
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // jstl
    compileOnly 'jstl:jstl:1.2'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
    providedRuntime 'org.apache.tomcat.embed:tomcat-embed-jasper'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    // notifier
    if (findProject(':spring-pushover') != null)
        implementation project(':spring-pushover')
    else implementation 'org.comroid:spring-pushover:0.+'

    // utility
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.projectreactor:reactor-test'
}
