plugins {
    id 'application'
    id 'war'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
}

import static java.lang.System.getenv

ext {
    isAutoDeploy = (rootProject.name != 'repo' && rootProject.name != 'java') || getenv().containsKey("TEAMCITY") || getenv().containsKey("JITPACK")
}

group 'org.comroid'
version = '0.5-SNAPSHOT'
apply from: 'gradle/vars.gradle'

sourceCompatibility = 17
targetCompatibility = 17

mainClassName = 'org.comroid.auth.AuthServer'

repositories {
    maven { url 'https://maven.comroid.org' }
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url 'https://www.jitpack.io' }
}

task simplifyDist(type: Copy, dependsOn: 'bootWar') {
    from bootWar.outputs.files.singleFile
    def target = file("$buildDir/dist")
    into target
    rename { String filename -> return "auth.war" }
    System.out.printf("Simplifying file name to: %s/auth.war\n", target.getAbsolutePath())
}

dependencies {
    compileOnly 'org.jetbrains:annotations:23.0.0'

    // todo: use status api again
    if (findProject(':api') == null) {
        //implementation 'org.comroid:status-api:0.+'
        implementation 'org.comroid:api:0.+'
    } else {
        //implementation project(':status:status-api')
        implementation project(':api')
    }

    // db
    runtimeOnly 'com.mysql:mysql-connector-j'

    // data
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // jstl
    compileOnly 'jstl:jstl:1.2'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
    providedRuntime 'org.apache.tomcat.embed:tomcat-embed-jasper'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.session:spring-session-jdbc'

    // utility
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.projectreactor:reactor-test'
}
